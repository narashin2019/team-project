<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.nmnm.gms.dao.GroupDao">

  <resultMap type="Group" id="GroupMap">
    <id column="group_no"  property="no"/>
    <result column="group_name" property="name"/>
    <result column="group_info" property="info"/>
    <result column="group_photo" property="photo"/>
    <result column="city" property="city"/>
    <result column="max_people_no" property="maxPeopleNo"/>
    <result column="bank" property="bank"/>
    <result column="bank_no" property="bankNo"/>
    <result column="account_holder" property="accountHolder"/>
  </resultMap>
  | group_no       | int(11)      | NO   | PRI | NULL    | auto_increment |
| group_name     | varchar(255) | NO   | UNI | NULL    |                |
| group_info     | text         | NO   |     | NULL    |       |
| category       | varchar(20)  | NO   |     | NULL    |                |
| group_photo    | varchar(255) | YES  |     | NULL    |                |
| city           | varchar(255) | YES  |     | NULL    |                |
| max_people_no  | varchar(20)  | NO   |     | NULL    |                |
| bank           | varchar(255) | NO   |     | NULL    |                |
| bank_no        | varchar(20)  | NO   |     | NULL    |                |
| account_holder | varchar(50)  | NO   |     | NULL    |      
  
  <insert id="insert" parameterType="Member">
    insert into nm_member(
      member_name,
      password, 
      id_photo, 
      birthday, 
      gender, 
      email,
      tel,
      intro,
      interest,
      nickname,
      sns
    ) values(
      #{name},
      password(#{password}),
      #{photo},
      #{birthday},
      #{gender},
      #{email},
      #{tel},
      #{intro},
      #{interest},
      #{nickname},
      #{sns})
  </insert>
  
  <select id="findAll" resultMap="MemberMap">
    select
      member_no,
      member_name,
      nickname,
      gender,
      email,
      tel
    from 
      nm_member
  </select>

  
  <select id="findByNo" resultMap="MemberMap" parameterType="int">
    select 
      member_no,
      member_name,
      nickname,
      birthday,
      gender,
      email,
      id_photo,
      tel,
      intro,
      sns,
      create_date
    from 
      nm_member
    where 
      member_no=#{no}
  </select>
  
  <update id="update" parameterType="Member">
    update nm_member
    <set>
      <if test="name != null and name != ''">member_name=#{name},</if>
      <if test="nickname != null and nickname != ''">nickname=#{nickname},</if>
      <if test="email != null and email != ''">email=#{email},</if> 
      <if test="password != null and password != ''">password=password(#{password}),</if>
      <if test="tel != null and tel != ''">tel=#{tel},</if>
      <if test="photo != null and photo != ''">id_photo=#{photo}</if>
    </set>
    where 
      member_no=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from nm_member
    where member_no=#{no}
  </delete>
  
  <select id="findByKeyword" resultMap="MemberMap"
    parameterType="string">
        <bind name="keywordPattern" value="'%' + _parameter + '%'"/>
        select
        member_no,
            member_name,
            nickname,
            gender,
            tel
        from nm_member
        where     
            member_name like #{keywordPattern}
            or nickname like #{keywordPattern}
            or gender  like #{keywordPattern}
            or tel  like #{keywordPattern}
    </select>
  
  <select id="findByEmailAndPassword" 
    resultMap="MemberMap" 
    parameterType="map">
    select 
      member_no, 
      nickname
    from nm_member
    where 
      email=#{email} 
      and pwd=password(#{password})
  </select>
</mapper>