<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.nmnm.gms.dao.MemberDao">
    <!-- 회원 -->
  <resultMap type="Member" id="MemberMap">
    <id column="member_no"  property="no"/>
    <result column="member_name"       property="name"/>
    <result column="id_photo"  property="photo"/>
    <result column="birthday"    property="birthday"/>
    <result column="email" property="email"/> 
    <result column="password" property="password"/> 
    <result column="intro" property="intro"/>
    <result column="interest" property="interest"/>
    <result column="nickname" property="nickname"/>
    <result column="create_date" property="createDate"/>
  <association property="group" javaType="Group">
    <result column="group_name" property="groupName"/>
    <result column="userkey" property="userkey"/>
    <result column="auth_status" property="authStatus"/>
  </association>
  </resultMap>
  
  <resultMap type="GroupMember" id="GrMemberMap">
    <id column="member_no" property="no"/>
  </resultMap>
  
    <select id="emailCheck" resultType="int">
        SELECT COUNT(*) FROM nm_member
        WHERE email = #{email}
    </select>
    
    <insert id="insert">
        INSERT INTO nm_member
        (email, password, member_name, nickname)
        VALUES
        (#{email},password(#{password}),#{name},#{nickname})
    </insert>
 
  <update id="alterKey">
        UPDATE nm_member
        SET userkey = 'y'
        WHERE id = #{param1} AND userkey = #{param2}
    </update>
    
    <select id="userView" resultType="Member">
        SELECT * FROM nm_member
        WHERE id = #{id}
    </select>
    <select id="pwCheck" resultType="String">
        SELECT password FROM nm_member
        WHERE email = #{param1}
    </select>
    <update id="pwUpdate">
        UPDATE nm_member SET 
            password = password(#{password})
        WHERE email = #{email}
    </update>
    <update id="memDrop">
        UPDATE nm_member SET 
            authStatus = 'd' 
        WHERE email = #{email}
    </update>
  
  <select id="findAll" resultMap="MemberMap">
    select
      member_no,
      member_name,
      nickname,
      email
    from 
      nm_member
  </select>

  
  <select id="findByNo" resultMap="MemberMap" parameterType="int">
    select 
      member_no,
      member_name,
      nickname,
      birthday,
      email,
      id_photo,
      intro,
      create_date
    from 
      nm_member
    where 
      member_no=#{no}
  </select>
  
  <update id="update" parameterType="Member">
    update nm_member
    <set>
      <if test="name != null and name != ''">member_name=#{name},</if>
      <if test="nickname != null and nickname != ''">nickname=#{nickname},</if>
      <if test="email != null and email != ''">email=#{email},</if> 
      <if test="password != null and password != ''">password=password(#{password}),</if>
      <if test="photo != null and photo != ''">id_photo=#{photo}</if>
    </set>
    where 
      member_no=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from nm_member
    where member_no=#{no}
  </delete>
  
  <select id="findByKeyword" resultMap="MemberMap"
    parameterType="string">
        <bind name="keywordPattern" value="'%' + _parameter + '%'"/>
        select
        member_no,
            member_name,
            nickname
        from nm_member
        where     
            member_name like #{keywordPattern}
            or nickname like #{keywordPattern}
    </select>
  
 <select id="findByEmailAndPassword" 
    resultMap="MemberMap" 
    parameterType="map">
    select *
    from nm_member
    where 
      email=#{email} 
      and password=password(#{password})
  </select>
  
    
<select id="checknick" parameterType="String" resultType="Integer">
      SELECT COUNT(*) FROM nm_member
      WHERE
          nickname = #{nickname}
</select>


<!-- 그룹 가입 신청하기 -->
  <insert id="insertGrMember" parameterType="com.nmnm.gms.domain.GroupMember">
    insert into nm_group_member(
    group_no,
    member_no,
    grade_no)
    values(
    #{groupNo},
    #{memberNo},
    #{gradeNo})
  </insert>
  
  <!-- 가입신청 승인 -->

    <update id="approvalGrMember" parameterType="com.nmnm.gms.domain.GroupMember">
        update nm_group_member
            <set>
      <if test="register == 0">register=1</if>
    </set>
    where 
      member_no=#{no}
    </update>
    
<!-- 회원이 속해 있는 그룹 회원번호로 조회 -->
  <select id="findgrmember" parameterType="int" resultMap="MemberMap"> 
    select m.*, g.group_name
     from nm_member m
     join nm_group_member gm on
     gm.member_no = m.member_no
     join nm_group g on
    g.group_no = gm.group_no   
    where gm.member_no = #{memberNo} and register = 1
  </select>
</mapper>
